/*
 *
 * This is a test file for the parser.
 * It is meant to test each feature, even tho it doesn't
 * make any sense most of the times.
 * This should never throw once committed.
 *
 */

arr = [ 36, 845, 215, "he", true, [ .5465, 486513], aur, /* wtf */ new String() ]

arr.add([], arr)

var a = 0

var a = arr != [] ? arr : [0]

func someFunc() {
    print("called!")

    return
}

func someFunc1(a, string b, c): int {
    
}

func someFunc2(a, b, c) {
    return rnd.Next()
}

from origin import *

from std import math

namespace my_space

foreach (item in collection) { }

foreach (otherItem in otherCollection) {
    if (collection.contains(otherItem)) break;

    otherItem.markAsBad()
}

for (var i = 0, i < 10, i++) {
    print(i)
}

for (var _ = i, i > 10, --i) { }

if (condition)
    print("it's true")

if (a || b && c != d + e)
    print("tf")
else if (this.otherCondition()) {
    print("maybe ?")
} else { }

while (str.length < 20) {
    if (str[-1] == "z") continue;

    str.concat(alphabet[rnd.Next(26)], (string)rnd.Next(26))
}

do
    print("still looping")
while (_global++ < 13)

/* some /* nested */ comments */

// some on-line comment