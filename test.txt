from "extern.lts" import *
from std import math

namespace my_nspace

def someFunc() {
    print("from someFunc")
}

someFunc()

def add(i1, i2) {

    var temp = i1 + i2

    return i1 + i2
}

add(96, 65)

add(-6, 85)

var str = "world"

var n =
      1 * .2
    + "hello "
    + $"{str} !"
    + (8 - 9) / 2
    + math.PI
    + extern.MOTD.toString()
    + global.args[6 / 6 - 1]
    + extern.magicNumber.toString("x")

                                                        hey++
--                                          hello // yes, surprisingly, that is legal, and no, it is not a bug

n = -.1

foreach (item in collection) {
    if (item != 0) continue;

    hello.there(item);
}

foreach (item2 in some.class.arr) {
    if (item2 == "am tired") break;
}

var a = --n

obj = new Object()

arr = [ 1, 5, -3, 8 ]

var b = true

for (var i = 0, i < arr.length, i++)
    print(arr[i])

if (!arr.contains(5)) {
    print("arr didn't contain the number five. Adding it back...")
    arr.add(5)
}

var counter = 5;

while (counter > 0) counter--

if (a < 0) {
    a = math.abs(a);
} else if (a == 0)
    a = 100
else
    a = math.pow(a, 2)